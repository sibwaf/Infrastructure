apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "{{ .Chart.Name }}"
  labels:
    {{- include "labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "selectorLabels" . | nindent 6 }}
  replicas: 1
  template:
    metadata:
      labels:
        {{- include "selectorLabels" . | nindent 8 }}
    spec:
      volumes:
        - name: "config"
          configMap:
            name: "{{ .Chart.Name }}"
      containers:
        - name: "{{ .Chart.Name }}"
          image: "grafana/grafana-oss:{{ .Chart.AppVersion }}"
          imagePullPolicy: "IfNotPresent"
          env:
            - name: "GF_SECURITY_ADMIN_USER"
              valueFrom:
                secretKeyRef:
                  name: "{{ .Chart.Name }}"
                  key: "username"
            - name: "GF_SECURITY_ADMIN_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: "{{ .Chart.Name }}"
                  key: "password"
            - name: "VM_USERNAME"
              valueFrom:
                secretKeyRef:
                  name: "{{ .Chart.Name }}"
                  key: "vm-username"
            - name: "VM_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: "{{ .Chart.Name }}"
                  key: "vm-password"
          ports:
            - name: "http"
              containerPort: 3000
          volumeMounts:
            - name: "config"
              subPath: "datasources.yaml"
              mountPath: "/etc/grafana/provisioning/datasources/datasources.yaml"
              readOnly: true
            - name: "config"
              subPath: "dashboards.yaml"
              mountPath: "/etc/grafana/provisioning/dashboards/dashboards.yaml"
              readOnly: true
            {{- range $path, $_ := .Files.Glob "resources/dashboards-*.json" }}
            - name: "config"
              subPath: {{ base $path | quote }}
              mountPath: "/dashboards/{{ base $path }}"
              readOnly: true
            {{- end }}
