apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  name: "{{ .Chart.Name }}"
  labels:
    {{- include "labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "selectorLabels" . | nindent 6 }}
  replicas: 1
  template:
    metadata:
      labels:
        {{- include "selectorLabels" . | nindent 8 }}
    spec:
      volumes:
        - name: "config"
          configMap:
            name: "{{ .Chart.Name }}"
      containers:
        - name: "{{ .Chart.Name }}"
          image: "b4bz/homer:{{ .Chart.AppVersion }}"
          imagePullPolicy: "IfNotPresent"
          env:
            - name: "INIT_ASSETS"
              value: "0"
          volumeMounts:
            - name: "config"
              subPath: "homer.yaml"
              mountPath: "/www/assets/config.yml"
          resources:
            limits:
              memory: "16Mi"
              cpu: "100m"
        - name: "auth-proxy"
          image: "caddy:2.6.4"
          imagePullPolicy: "IfNotPresent"
          env:
            - name: "LIDARR_TOKEN"
              valueFrom:
                secretKeyRef:
                  name: "{{ .Chart.Name }}"
                  key: "lidarr-token"
            - name: "PROWLARR_TOKEN"
              valueFrom:
                secretKeyRef:
                  name: "{{ .Chart.Name }}"
                  key: "prowlarr-token"
            - name: "RADARR_TOKEN"
              valueFrom:
                secretKeyRef:
                  name: "{{ .Chart.Name }}"
                  key: "radarr-token"
            - name: "SONARR_TOKEN"
              valueFrom:
                secretKeyRef:
                  name: "{{ .Chart.Name }}"
                  key: "sonarr-token"
          ports:
            - name: "http"
              containerPort: 80
          volumeMounts:
            - name: "config"
              subPath: "Caddyfile"
              mountPath: "/etc/caddy/Caddyfile"
          resources:
            limits:
              memory: "16Mi"
              cpu: "100m"
