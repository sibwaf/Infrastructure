apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gonic
spec:
  rules:
    - host: "gonic.{{ selfhosted_hostname }}"
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: gonic
                port:
                  number: 80

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gonic
spec:
  storageClassName: app-data
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: gonic
spec:
  selector:
    matchLabels:
      app: gonic
  replicas: 1
  template:
    metadata:
      labels:
        app: gonic
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: gonic
        - name: library
          hostPath:
            path: "{{ selfhosted_storage_path }}/Media/Music"
            type: DirectoryOrCreate
      containers:
        - name: gonic
          image: sentriz/gonic:v0.15.2
          imagePullPolicy: IfNotPresent
          env:
            - name: GONIC_SCAN_WATCHER_ENABLED
              value: "true"
            - name: GONIC_GENRE_SPLIT
              value: ";"
          ports:
            - name: http
              containerPort: 80
          volumeMounts:
            - name: data
              mountPath: /data
            - name: library
              mountPath: /music
              readOnly: true
          resources:
            limits:
              memory: 256Mi
              cpu: 500m

---

apiVersion: v1
kind: Service
metadata:
  name: gonic
spec:
  selector:
    app: gonic
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 80
