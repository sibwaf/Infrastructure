apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: homer
spec:
  rules:
    - host: "{{ selfhosted_hostname }}"
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: homer
                port:
                  number: 80

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: homer
spec:
  selector:
    matchLabels:
      app: homer
  replicas: 1
  template:
    metadata:
      labels:
        app: homer
    spec:
      volumes:
        - name: config
          configMap:
            name: homer
      containers:
        - name: homer
          image: b4bz/homer:v23.05.1
          imagePullPolicy: IfNotPresent
          env:
            - name: INIT_ASSETS
              value: "0"
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: config
              subPath: config.yml
              mountPath: /www/assets/config.yml
          resources:
            limits:
              memory: 8Mi
        - name: auth-proxy
          image: caddy:2.6.4
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: homer
          ports:
            - containerPort: 80
          volumeMounts:
            - name: config
              subPath: Caddyfile
              mountPath: /etc/caddy/Caddyfile
          resources:
            limits:
              memory: 16Mi

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: homer
data:
  config.yml: |
    header: false
    footer: false

    defaults:
      layout: list
    columns: 3

    connectivityCheck: true
    proxy:
      useCredentials: false

    services:
      - name: "General"
        items:
          - name: "Inuyama"
            url: "http://inuyama.{{ selfhosted_hostname }}/"
          - name: "Homebox"
            subtitle: "Inventory management"
            url: "http://homebox.{{ selfhosted_hostname }}/"
            logo: "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/homebox.png"

      - name: "Monitoring"
        items:
          - name: "VictoriaMetrics"
            subtitle: "Metrics collection and storage"
            logo: "https://docs.victoriametrics.com/assets/images/favicon.svg"
            url: "http://metrics.{{ selfhosted_hostname }}/"
          - name: "Grafana"
            subtitle: "Dashboards"
            logo: "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/grafana.png"
            url: "http://grafana.{{ selfhosted_hostname }}/"
          - name: "Grafana / VPN"
            subtitle: "VPN usage dashboard"
            logo: "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/grafana.png"
            url: "http://grafana.{{ selfhosted_hostname }}/d/vpn/"
          - name: "Grafana / Nodes"
            subtitle: "Node statistics"
            logo: "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/grafana.png"
            url: "http://grafana.{{ selfhosted_hostname }}/d/node-exporter/"

      - name: "Media"
        items:
          - name: "Gonic"
            subtitle: "Music streaming"
            logo: "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/gonic.png"
            url: "http://gonic.{{ selfhosted_hostname }}/"
          - name: "Lidarr"
            subtitle: "Music library management"
            logo: "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/lidarr.png"
            url: "http://lidarr.{{ selfhosted_hostname }}/"
            endpoint: "http://{{ selfhosted_hostname }}/proxy/lidarr"
            type: "Lidarr"
          - name: "Sonarr"
            subtitle: "TV series library management"
            logo: "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/sonarr.png"
            url: "http://sonarr.{{ selfhosted_hostname }}/"
            endpoint: "http://{{ selfhosted_hostname }}/proxy/sonarr"
            type: "Sonarr"
          - name: "Radarr"
            subtitle: "Movie library management"
            logo: "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/radarr.png"
            url: "http://radarr.{{ selfhosted_hostname }}/"
            endpoint: "http://{{ selfhosted_hostname }}/proxy/radarr"
            type: "Radarr"
          - name: "Prowlarr"
            subtitle: "Source management for the *arr stack"
            logo: "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/prowlarr.png"
            url: "http://prowlarr.{{ selfhosted_hostname }}/"
            endpoint: "http://{{ selfhosted_hostname }}/proxy/prowlarr"
            type: Prowlarr

      - name: "Downloads"
        items:
          - name: "Transmission / selfhosted"
            subtitle: "Torrent client for general usage"
            logo: "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/transmission.png"
            url: "http://transmission.{{ selfhosted_hostname }}/"
          - name: "Transmission / seedbox"
            subtitle: "Torrent client on seedbox"
            logo: "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/transmission.png"
            url: "http://seedbox-transmission.{{ selfhosted_hostname }}/"
          - name: "Deluge"
            subtitle: "Torrent client for the *arr stack"
            logo: "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/deluge.png"
            url: "http://deluge.{{ selfhosted_hostname }}/"

      - name: "Tooling"
        items:
          - name: "Gotify"
            subtitle: "Push notification server"
            logo: "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/gotify.png"
            url: "http://gotify.{{ selfhosted_hostname }}/"
          - name: "Syncthing"
            subtitle: "File synchronization"
            logo: "https://cdn.jsdelivr.net/gh/walkxcode/dashboard-icons/png/syncthing.png"
            url: "http://syncthing.{{ selfhosted_hostname }}/"

  Caddyfile: |
    :80 {
      @lidarr {
        path /proxy/lidarr/api/v1/health
        path /proxy/lidarr/api/v1/queue/status
      }
      route @lidarr {
        rewrite ?apikey={$LIDARR_TOKEN}
        uri strip_prefix /proxy/lidarr
        reverse_proxy http://lidarr
      }

      @radarr {
        path /proxy/radarr/api/v3/health
        path /proxy/radarr/api/v3/queue
      }
      route @radarr {
        rewrite ?apikey={$RADARR_TOKEN}
        uri strip_prefix /proxy/radarr
        reverse_proxy http://radarr
      }

      @sonarr {
        path /proxy/sonarr/api/v3/health
        path /proxy/sonarr/api/v3/queue
      }
      route @sonarr {
        rewrite ?apikey={$SONARR_TOKEN}
        uri strip_prefix /proxy/sonarr
        reverse_proxy http://sonarr
      }

      @prowlarr {
        path /proxy/prowlarr/api/v1/health
      }
      route @prowlarr {
        rewrite ?apikey={$PROWLARR_TOKEN}
        uri strip_prefix /proxy/prowlarr
        reverse_proxy http://prowlarr
      }

      error /proxy/* 418

      reverse_proxy http://localhost:8080
    }

---

apiVersion: v1
kind: Service
metadata:
  name: homer
spec:
  selector:
    app: homer
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 80
