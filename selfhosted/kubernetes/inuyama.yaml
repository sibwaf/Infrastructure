apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: inuyama
spec:
  rules:
    - host: "inuyama.{{ selfhosted_hostname }}"
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: inuyama
                port:
                  number: 80

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: inuyama-backups
spec:
  storageClassName: app-data
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: inuyama
spec:
  selector:
    matchLabels:
      app: inuyama
  replicas: 1
  template:
    metadata:
      labels:
        app: inuyama
    spec:
      volumes:
        - name: secret
          secret:
            secretName: inuyama
        - name: backups
          persistentVolumeClaim:
            claimName: inuyama-backups
      containers:
        - name: inuyama
          image: sibwaf/inuyama:latest
          imagePullPolicy: Never
          env:
            - name: INUYAMA_SERVER_API_PORT
              value: "8080"
            - name: INUYAMA_AUTHENTICATION_USERNAME
              valueFrom:
                secretKeyRef:
                  name: inuyama
                  key: username
            - name: INUYAMA_AUTHENTICATION_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: inuyama
                  key: password
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: backups
              mountPath: /app/backups
            - name: secret
              subPath: server.key
              mountPath: /app/server.key
          resources:
            limits:
              memory: 256Mi

---

apiVersion: v1
kind: Service
metadata:
  name: inuyama
spec:
  selector:
    app: inuyama
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 8080
