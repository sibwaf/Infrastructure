apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prometheus
spec:
  rules:
    - host: "prometheus.{{ selfhosted_hostname }}"
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: prometheus
                port:
                  number: 80

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus
spec:
  storageClassName: app-data
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
spec:
  selector:
    matchLabels:
      app: prometheus
  replicas: 1
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: prometheus
        - name: config
          emptyDir: {}
      initContainers:
        - name: generate-config
          image: busybox
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: prometheus
                optional: true
          env:
            - name: PROMETHEUS_SCRAPE_0
              value: "cluster-host=10.0.1.1:9100"
          command:
            - sh
            - -c
            - >
              cat <<EOF > /config/prometheus.yml
                global:
                  scrape_interval: 15s

                scrape_configs:
              EOF

              for i in $(seq 0 99); do
                entry=$(eval echo "\$PROMETHEUS_SCRAPE_$i")
                if [ -z "$entry" ]; then
                  continue
                fi

                name=$(echo "$entry" | cut -d '=' -f 1)
                address=$(echo "$entry" | cut -d '=' -f 2)

                echo "  - job_name: \"$name\"" >> /config/prometheus.yml
                echo "    static_configs:" >> /config/prometheus.yml
                echo "      - targets: [\"$address\"]" >> /config/prometheus.yml
              done
          volumeMounts:
            - name: config
              mountPath: /config
        - name: chown
          image: busybox
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c", "chown -R nobody:nobody /prometheus"]
          volumeMounts:
            - name: data
              mountPath: /prometheus
      containers:
        - name: prometheus
          image: prom/prometheus:v2.45.0
          imagePullPolicy: IfNotPresent
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus"
            - "--storage.tsdb.retention.time=31d"
            - "--web.console.libraries=/usr/share/prometheus/console_libraries"
            - "--web.console.templates=/usr/share/prometheus/consoles"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: data
              mountPath: /prometheus
            - name: config
              subPath: prometheus.yml
              mountPath: /etc/prometheus/prometheus.yml

---

apiVersion: v1
kind: Service
metadata:
  name: prometheus
spec:
  selector:
    app: prometheus
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 9090
