apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: seedbox-proxy
spec:
  rules:
    - host: "seedbox-transmission.{{ selfhosted_hostname }}"
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: seedbox-transmission-proxy
                port:
                  number: 80

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: seedbox-proxy
spec:
  selector:
    matchLabels:
      app: seedbox-proxy
  replicas: 1
  template:
    metadata:
      labels:
        app: seedbox-proxy
    spec:
      volumes:
        - name: config
          configMap:
            name: seedbox-proxy
      containers:
        - name: seedbox-proxy
          image: caddy:2.6.4
          imagePullPolicy: IfNotPresent
          args: ["caddy", "run", "--config", "/etc/caddy/Caddyfile", "--watch"]
          ports:
            - name: transmission
              containerPort: 8080
          volumeMounts:
            - name: config
              mountPath: /etc/caddy
              readOnly: true
          resources:
            limits:
              memory: 32Mi
              cpu: 200m

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: seedbox-proxy
data:
  Caddyfile: |
    :8080 {
      reverse_proxy http://{{ seedbox_hostname }}:{{ seedbox_transmission_ui_port }}
    }

---

apiVersion: v1
kind: Service
metadata:
  name: seedbox-transmission-proxy
spec:
  selector:
    app: seedbox-proxy
  type: ClusterIP
  ports:
    - port: 80
      targetPort: "transmission"
