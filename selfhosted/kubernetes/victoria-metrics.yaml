apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: victoria-metrics
spec:
  rules:
    - host: "metrics.{{ selfhosted_hostname }}"
      http:
        paths:
          - pathType: Prefix
            path: /
            backend:
              service:
                name: victoria-metrics
                port:
                  number: 80

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: victoria-metrics
spec:
  storageClassName: app-data
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: victoria-metrics
spec:
  selector:
    matchLabels:
      app: victoria-metrics
  replicas: 1
  template:
    metadata:
      labels:
        app: victoria-metrics
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: victoria-metrics
        - name: config
          emptyDir: {}
      initContainers:
        - name: generate-config
          image: busybox
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: victoria-metrics
                optional: true
          env:
            - name: PROMETHEUS_SCRAPE_0
              value: "cluster-host=10.0.1.1:9100"
          command:
            - sh
            - -c
            - >
              cat <<EOF > /config/prometheus.yml
                global:
                  scrape_interval: 15s

                scrape_configs:
              EOF

              for i in $(seq 0 99); do
                entry=$(eval echo "\$PROMETHEUS_SCRAPE_$i")
                if [ -z "$entry" ]; then
                  continue
                fi

                name=$(echo "$entry" | cut -d '=' -f 1)
                address=$(echo "$entry" | cut -d '=' -f 2)

                echo "  - job_name: \"$name\"" >> /config/prometheus.yml
                echo "    static_configs:" >> /config/prometheus.yml
                echo "      - targets: [\"$address\"]" >> /config/prometheus.yml

                labels=$(eval echo "\$PROMETHEUS_LABELS_$i")
                if [ -n "$labels" ]; then
                  echo "        labels:" >> /config/prometheus.yml
                  for label in $(echo "$labels" | tr ";" "\n"); do
                    label_name=$(echo "$label" | cut -d "=" -f 1)
                    label_value=$(echo "$label" | cut -d "=" -f 2)
                    echo "          \"$label_name\": \"$label_value\"" >> /config/prometheus.yml
                  done
                fi
              done
          volumeMounts:
            - name: config
              mountPath: /config
      containers:
        - name: victoria-metrics
          image: victoriametrics/victoria-metrics:v1.92.1
          imagePullPolicy: IfNotPresent
          args:
            - "-promscrape.config"
            - "/config/prometheus.yml"
            - "-retentionPeriod"
            - "31d"
            - "-httpAuth.username"
            - "%{USERNAME}"
            - "-httpAuth.password"
            - "%{PASSWORD}"
          env:
            - name: "USERNAME"
              valueFrom:
                secretKeyRef:
                  name: victoria-metrics
                  key: username
            - name: "PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: victoria-metrics
                  key: password
          ports:
            - containerPort: 8428
          volumeMounts:
            - name: data
              mountPath: /victoria-metrics-data
            - name: config
              mountPath: /config

---

apiVersion: v1
kind: Service
metadata:
  name: victoria-metrics
spec:
  selector:
    app: victoria-metrics
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: 8428
